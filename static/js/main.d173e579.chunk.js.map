{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","Link","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","role","onClick","toggleMode","htmlFor","href","rel","src","TextForm","showAlert","numberOfWords","text","trim","split","length","setText","useState","text1","setText1","searchText","setSearchText","Fragment","style","color","marginTop","padding","textAlign","heading","rows","value","backgroundColor","onChange","event","console","log","target","defaultValue","disabled","handleUpClick","newText","toUpperCase","handleLowClick","toLowerCase","handleClear","fontSize","height","width","searchFor","search","includes","About","accordionStyle","data-bs-parent","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","Router","document","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d173e579.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  {props.aboutText}\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode}/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light' ?\"Enable Dark Mode\" : \"Enable Light Mode\"}</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n    </nav>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\"/>\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n// a\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const showAlert = props.showAlert;\r\n  //function for converting into upper case\r\n\r\n  const handleUpClick = () => {\r\n    console.log(\"Handle up click\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);   \r\n    showAlert(\"Coverted to upper case\", \"success\");\r\n  }\r\n\r\n  //function for change in the first text box\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"Handle on change\");\r\n    setText(event.target.value);\r\n    showAlert(\"TextBox Changed\", \"success\");\r\n  }\r\n\r\n  //function for changing in the second text box\r\n\r\n  const handleOnChangeSearch = (event) => {\r\n    setText1(event.target.value);\r\n    showAlert(\"TextBox Changed\", \"success\");\r\n  }\r\n  //function for converting into lower case\r\n\r\n  const handleLowClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    showAlert(\"Coverted to lower case\", \"success\");\r\n  }\r\n\r\n  //function to clear text\r\n  const handleClear = () =>{\r\n    setText('');\r\n    showAlert(\"Text Cleared\", \"success\");\r\n  }\r\n  //function for searching whether a text is found in the larger text\r\n\r\n  const searchFor = () => {\r\n    let search = text1.toLowerCase();\r\n    let large = text.toLowerCase();\r\n    if(large.includes(search)){\r\n        setSearchText(`\"${text1}\" is found in text`);\r\n    }\r\n    else{\r\n        setSearchText(`\"${text1}\" is not found in text`);\r\n    }\r\n    showAlert(\"Operation done\", \"success\");\r\n  }\r\n\r\n  const numberOfWords = (text) => {\r\n    if (text.trim() === \"\") {\r\n      return 0;\r\n    }\r\n    return text.trim().split(/\\s+/).length;\r\n  };\r\n\r\n  //use state\r\n  const [text, setText] = useState('');\r\n  const [text1, setText1] = useState('');\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  return (\r\n    <>\r\n        <div className = \"container\"  style = {{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n            <div >\r\n                <h3 className=\"mb-3\" style={{ marginTop: '40px', padding: '10px', textAlign: 'center' }}>\r\n                  {props.heading}\r\n                </h3>\r\n                <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n                </label>\r\n                <textarea\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                rows={10}\r\n                value = {text}\r\n                style={{backgroundColor : props.mode === 'light' ? 'white' : '#042743', color : props.mode === 'light' ? 'black' : 'white'}}  \r\n                onChange = {handleOnChange}\r\n                defaultValue={\"\"}\r\n                />\r\n                <button className='btn btn-primary my-3 mx-2' disabled = {text.length === 0} onClick={handleUpClick}>\r\n                    Convert To UpperCase\r\n                </button>\r\n                <button className='btn btn-primary my-3 mx-2'  disabled = {text.length === 0}onClick={ handleLowClick }>\r\n                    Convert To LowerCase\r\n                </button>\r\n                <button className='btn btn-primary my-3 mx-2'  disabled = {text.length === 0}onClick={ handleClear}>\r\n                    Clear Text\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div className = \"container\" style = {{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n            <label htmlFor='search' style={{ fontSize: 'large' }}>Search:</label>\r\n            <textarea\r\n                className=\"form-control\"\r\n                id=\"exampleFormControlTextarea1\"\r\n                style={{ height: '50px', width: '200px', backgroundColor : props.mode === 'light' ? 'white' : '#042743', color : props.mode === 'light' ? 'black' : 'white'}}  \r\n                value = {text1}\r\n                onChange = {handleOnChangeSearch}\r\n                defaultValue={\"\"}\r\n            />\r\n            <button className='btn btn-primary my-3 '  disabled = {text.length === 0 || text1.length === 0}onClick={ searchFor }>\r\n                    Search\r\n             </button>\r\n             <div>\r\n             </div>\r\n             <label style = {{color : props.mode === 'light' ? 'black' : 'white'}}>{searchText}</label>\r\n        </div>\r\n        <div className = \"container\" style = {{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n            <h3>Text Summary</h3>\r\n            <p>{numberOfWords(text)} words and {text.length} characters</p>\r\n            <p>{0.008 * numberOfWords(text)} minutes to read</p>\r\n        </div>\r\n        <div className = \"container\" style = {{color : props.mode === 'light' ? 'black' : 'white'}}>\r\n          <h4>Preview</h4>\r\n          <p>{text.length > 0 ? text :\"Enter text to preview\"}</p>\r\n        </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nexport default function About(props) {\r\n  // Define styles for light and dark modes\r\n  const myStyle = {\r\n    color: props.mode === 'light' ? 'black' : 'white',\r\n    backgroundColor: props.mode === 'light' ? 'white' : '#343a40',\r\n  };\r\n\r\n  const accordionStyle = {\r\n    backgroundColor: props.mode === 'light' ? '#f8f9fa' : '#212529',\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 style={{color: props.mode === 'light' ? 'black' : 'white' }}>About Us</h1>\r\n      <div className=\"accordion\" id=\"accordionExample\" style={accordionStyle}>\r\n        <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#343a40' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n              style={{ backgroundColor: props.mode === 'light' ? '#e9ecef' : '#495057', color: props.mode === 'light' ? 'black' : 'white' }}\r\n            >\r\n              Features\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n              <ul>\r\n                <li>Lower Case</li>\r\n                <li>Upper Case</li>\r\n                <li>Clear</li>\r\n                <li>Search</li>\r\n                <li>Preview</li>\r\n                <li>Light and Dark</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#343a40' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n              style={{ backgroundColor: props.mode === 'light' ? '#e9ecef' : '#495057', color: props.mode === 'light' ? 'black' : 'white' }}\r\n            >\r\n              Overview\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n              Flexible app which can be used to format our text\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={{ backgroundColor: props.mode === 'light' ? 'white' : '#343a40' }}>\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n              style={{ backgroundColor: props.mode === 'light' ? '#e9ecef' : '#495057', color: props.mode === 'light' ? 'black' : 'white' }}\r\n            >\r\n              Motto\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={{ color: props.mode === 'light' ? 'black' : 'white' }}>\r\n              To learn react\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Alert(props) {\r\n  const capitalize  = (word) =>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    <div>\r\n      {props.alert && (\r\n        <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n          <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport React, { useState } from 'react';\n\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About';\nimport Alert from './components/Alert';\n\nimport {\n  BrowserRouter as Router, \n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg :message,\n      type :type\n    })\n    setTimeout(() =>{\n      setAlert(null);\n    }, 1000);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark Mode is set\", \"success\");\n      // document.title = 'Textty Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode is set\", \"success\");\n      // document.title = 'Textty Light Mode';\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextConverter\" aboutText='About' mode={mode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className='container my-3'>\n          <Routes>\n            <Route exact path = '/about' element = {<About mode = {mode}/>}></Route>\n            <Route exact path= '/' element={<TextForm heading=\"Try TextConverter\" mode={mode} showAlert={showAlert}/>}/>\n          </Routes>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}